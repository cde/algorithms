exit
continue
next
continue
next
dp[i-1][0]
j
dp[i][j]
next
rm
i
dp
continue
exit
end
  dp[-1][0]
  end
    end
      dp[i][0] = (dp[i][0] + dp[i][j]) % mod
      dp[i][j] -= dp[i-rm-1][0] - dp[i-rm-1][j] if rm < i
      dp[i][j] = dp[i-1][0]
      byebug
    roll_max.each.with_index(1) do |rm, j|
  (1..n).each do |i|
  dp[0][0] = 1
  dp = Array.new(n+1) {Array.new(roll_max.size + 1, 0)}
  mod=10**9+7
  # limit of the value as stated in the prompt
  return 0 if roll_max.length > 6
def dice_simulator(n, roll_max)
dp
next
